#!/bin/bash

JOB_NAME=cubrid
export JOB_DIR=/var/vcap/jobs/${JOB_NAME}
export PKG_DIR=/var/vcap/packages/${JOB_NAME}
DATA_DIR=/var/vcap/data/packages/${JOB_NAME}
RUN_DIR=/var/vcap/sys/run/${JOB_NAME}
LOG_DIR=/var/vcap/sys/log/${JOB_NAME}

function setup_environment() {
  for dir in ${RUN_DIR} ${LOG_DIR}
  do
    mkdir -p ${dir}
    chown -R vcap:vcap ${dir}
    chmod -R 775 ${dir}
    echo "##### SETUP_ENVIRONMENT :: ${JOB_NAME} :: ${dir}"
  done
  chmod -R 777 /tmp
}

#cubrid env
if [[ ! `cat /etc/bash.bashrc|grep '#cubrid env'` ]];
then
  echo '#cubrid env' >> /etc/bash.bashrc
  echo '. /var/vcap/jobs/cubrid/config/.cubrid.sh' >> /etc/bash.bashrc
fi

if [ ! $CUBRID ]
then
  . /var/vcap/jobs/cubrid/config/.cubrid.sh
fi

#ssh setting. use root
if [[ `cat /etc/ssh/sshd_config|grep 'PermitRootLogin no'` ]];
then
  sed -i -e s/'PermitRootLogin no'/'PermitRootLogin yes'/g /etc/ssh/sshd_config
  service ssh restart
fi

setup_environment

case $1 in

  start)

    #if cubrid_broker database not exitst, create database for cubrid_broker
    if [[ ! -f $CUBRID_DATABASES/databases.txt || !`cat $CUBRID_DATABASES/databases.txt|grep <%= link('cubrid_broker_link').p('cubrid_broker.cubrid_db_name') %>` ]]
    then
        mkdir -p $CUBRID_DATABASES/<%= link('cubrid_broker_link').p('cubrid_broker.cubrid_db_name') %>
        cd $CUBRID_DATABASES/<%= link('cubrid_broker_link').p('cubrid_broker.cubrid_db_name') %>
        cubrid createdb --csql-initialization-file=$JOB_DIR/config/cubrid_broker_init.sql <%= link('cubrid_broker_link').p('cubrid_broker.cubrid_db_name') %> ko_KR.utf8
    fi

    #link config file
    ln -sf $JOB_DIR/config/cubrid.conf $PKG_DIR/CUBRID/conf/cubrid.conf
    ln -sf $JOB_DIR/config/cubrid_broker.conf $PKG_DIR/CUBRID/conf/cubrid_broker.conf

    #link log directory
    ln -sf $PKG_DIR/CUBRID/log $LOG_DIR

    chown -R vcap:vcap ${PKG_DIR}
    chmod -R 775 ${PKG_DIR}
    chown -R vcap:vcap ${DATA_DIR}
    chmod -R 775 ${DATA_DIR}

    #start script
    cubrid service start
    cubrid server start <%= link('cubrid_broker_link').p('cubrid_broker.cubrid_db_name') %>
    ;;

  stop)
    cubrid service stop
    ;;

  *)
    echo "Usage: cubrid_ctl {start|stop}" ;;

esac
